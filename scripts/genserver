#!/bin/bash

export PW=`cat password`

# Create a server certificate, tied to actorbase.com
keytool -genkeypair -v \
  -alias actorbase.com \
  -dname "CN=actorbase.com, OU=Actorbase-Server, O=ScalateKids, L=Padua, ST=Italy, C=IT" \
  -keystore actorbase.com.jks \
  -keypass:env PW \
  -storepass:env PW \
  -keyalg RSA \
  -keysize 2048 \
  -validity 385

# Create a certificate signing request for actorbase.com
keytool -certreq -v \
  -alias actorbase.com \
  -keypass:env PW \
  -storepass:env PW \
  -keystore actorbase.com.jks \
  -file actorbase.com.csr

# Tell actorbaseCA to sign the actorbase.com certificate.
# Technically, digitalSignature for DHE or ECDHE, keyEncipherment for RSA
keytool -gencert -v \
  -alias actorbaseca \
  -keypass:env PW \
  -storepass:env PW \
  -keystore actorbaseca.jks \
  -infile actorbase.com.csr \
  -outfile actorbase.com.crt \
  -ext KeyUsage:critical="digitalSignature,keyEncipherment" \
  -ext EKU="serverAuth" \
  -ext SAN="DNS:actorbase.com" \
  -rfc

# Tell actorbase.com.jks it can trust actorbaseca as a signer.
keytool -import -v \
  -alias actorbaseca \
  -file actorbaseca.crt \
  -keystore actorbase.com.jks \
  -storetype JKS \
  -storepass:env PW << EOF
yes
EOF

# Import the signed certificate back into actorbase.com.jks
keytool -import -v \
  -alias actorbase.com \
  -file actorbase.com.crt \
  -keystore actorbase.com.jks \
  -storetype JKS \
  -storepass:env PW

# List out the contents of actorbase.com.jks just to confirm it.
# If you are using Play as a TLS termination point, this is the key store you should use.
keytool -list -v \
  -keystore actorbase.com.jks \
  -storepass:env PW